{"ast":null,"code":"// 与内部不冲突，如果调用的为全局则不需要添加this\nimport { getPicCode, getMsgCode, codeLogin } from '@/api/login';\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      picKey: '',\n      // 用户输入的图形验证码唯一标识\n      picUrl: '',\n      // 请求图片的地址\n      totalSecond: 60,\n      // 总秒数\n      second: 60,\n      // 当前秒数，开定时器对second减减\n      timeId: '',\n      // 为定时器id\n      mobile: '',\n      // 手机号\n      picCode: '',\n      // 用户输入的图形验证码\n      msgCode: '' // 短信验证码\n    };\n  },\n  async created() {\n    this.getPicCode();\n  },\n  // 离开页面清除定时器\n  destroyed() {\n    clearInterval(this.timeId);\n  },\n  methods: {\n    // 从服务器提取所需要验证码的图片与标识\n    async getPicCode() {\n      const {\n        data: {\n          base64,\n          key\n        }\n      } = await getPicCode();\n      this.picUrl = base64;\n      this.picKey = key;\n      // this.$toast.success('获取图形验证码成功')\n    },\n    // 点击图片验证码获取图片\n    handleClickImg() {\n      this.getPicCode();\n    },\n    // 获取短信验证码\n    async getCode() {\n      // 判断手机与验证码是否为正确\n      if (!this.vaildFn()) {\n        return;\n      }\n      // 当目前无定时器开着且totalsecond与second相同\n      if (!this.timeId && this.second === this.totalSecond) {\n        // 发送请求(预期响应非200，抛出错误，await只会等待正确的promise)\n        await getMsgCode(this.picCode, this.picKey, this.mobile);\n        this.$toast('短信发送成功');\n        this.timeId = setInterval(() => {\n          // console.log('计时中')\n          this.second--;\n          if (this.second < 1) {\n            // 当计时器减为0时需要将计时器重置\n            clearInterval(this.timeId);\n            this.second = this.totalSecond;\n          }\n        }, 1000);\n      }\n    },\n    // 校验 手机号与图形验证码是否合法\n    vaildFn() {\n      if (!/^1[3-9]\\d{9}$/.test(this.mobile)) {\n        this.$toast('请输入正确手机号');\n        return false;\n      }\n      if (!/^\\w{4}$/.test(this.picCode)) {\n        this.$toast('请输入正确图形验证码');\n        return false;\n      }\n      return true;\n    },\n    // 登录校验\n    async login() {\n      if (!this.vaildFn()) {\n        return;\n      }\n      if (!/^\\d{6}$/.test(this.msgCode)) {\n        return;\n      }\n      const res = await codeLogin(this.mobile, this.msgCode);\n      this.$store.commit('user/setuserInfo', res.data);\n      // 看地址栏有无回跳地址\n      // 如果有则说明为其他网页回跳，拦截到登录，需要回跳\n      const backurl = this.$route.query.backUrl || '/';\n      this.$router.replace(backurl);\n      this.$toast('登录成功');\n\n      // const res = await codeLogin(this.mobile, this.msgCode)\n      // console.log(res)\n    }\n  }\n};","map":{"version":3,"names":["getPicCode","getMsgCode","codeLogin","name","data","picKey","picUrl","totalSecond","second","timeId","mobile","picCode","msgCode","created","destroyed","clearInterval","methods","base64","key","handleClickImg","getCode","vaildFn","$toast","setInterval","test","login","res","$store","commit","backurl","$route","query","backUrl","$router","replace"],"sources":["src/views/login/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <van-nav-bar title=\"会员登录\" left-arrow @click-left=\"$router.go('-1')\" />\r\n    <div class=\"container\">\r\n      <div class=\"title\">\r\n        <h3>手机号登录</h3>\r\n        <p>未注册的手机号登录后将自动注册</p>\r\n      </div>\r\n\r\n      <div class=\"form\">\r\n        <div class=\"form-item\">\r\n          <input v-model=\"mobile\" class=\"inp\" maxlength=\"11\" placeholder=\"请输入手机号码\" type=\"text\">\r\n        </div>\r\n        <div class=\"form-item\">\r\n          <input v-model=\"picCode\" class=\"inp\" maxlength=\"5\" placeholder=\"请输入图形验证码\" type=\"text\">\r\n          <img @click=\"handleClickImg\" v-if=\"picUrl\" :src=\"picUrl\" alt=\"\" style=\"cursor:pointer\">\r\n        </div>\r\n        <div class=\"form-item\">\r\n          <input class=\"inp\" placeholder=\"请输入短信验证码\" type=\"text\" v-model=\"msgCode\">\r\n          <button @click=\"getCode\">\r\n            {{ totalSecond === second  ? '获取验证码' : second + '秒后重新发送'}}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"login-btn\" @click=\"login\">登录</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 与内部不冲突，如果调用的为全局则不需要添加this\r\nimport { getPicCode, getMsgCode, codeLogin } from '@/api/login'\r\nexport default {\r\n  name: 'LoginPage',\r\n  data () {\r\n    return {\r\n      picKey: '', // 用户输入的图形验证码唯一标识\r\n      picUrl: '', // 请求图片的地址\r\n      totalSecond: 60, // 总秒数\r\n      second: 60, // 当前秒数，开定时器对second减减\r\n      timeId: '', // 为定时器id\r\n      mobile: '', // 手机号\r\n      picCode: '', // 用户输入的图形验证码\r\n      msgCode: '' // 短信验证码\r\n    }\r\n  },\r\n  async created () {\r\n    this.getPicCode()\r\n  },\r\n  // 离开页面清除定时器\r\n  destroyed () {\r\n    clearInterval(this.timeId)\r\n  },\r\n  methods: {\r\n    // 从服务器提取所需要验证码的图片与标识\r\n    async getPicCode () {\r\n      const { data: { base64, key } } = await getPicCode()\r\n      this.picUrl = base64\r\n      this.picKey = key\r\n      // this.$toast.success('获取图形验证码成功')\r\n    },\r\n    // 点击图片验证码获取图片\r\n    handleClickImg () {\r\n      this.getPicCode()\r\n    },\r\n\r\n    // 获取短信验证码\r\n    async getCode () {\r\n      // 判断手机与验证码是否为正确\r\n      if (!this.vaildFn()) {\r\n        return\r\n      }\r\n      // 当目前无定时器开着且totalsecond与second相同\r\n      if (!this.timeId && this.second === this.totalSecond) {\r\n        // 发送请求(预期响应非200，抛出错误，await只会等待正确的promise)\r\n        await getMsgCode(this.picCode, this.picKey, this.mobile)\r\n        this.$toast('短信发送成功')\r\n        this.timeId = setInterval(() => {\r\n          // console.log('计时中')\r\n          this.second--\r\n          if (this.second < 1) {\r\n            // 当计时器减为0时需要将计时器重置\r\n            clearInterval(this.timeId)\r\n            this.second = this.totalSecond\r\n          }\r\n        }, 1000)\r\n      }\r\n    },\r\n\r\n    // 校验 手机号与图形验证码是否合法\r\n    vaildFn () {\r\n      if (!/^1[3-9]\\d{9}$/.test(this.mobile)) {\r\n        this.$toast('请输入正确手机号')\r\n        return false\r\n      }\r\n      if (!/^\\w{4}$/.test(this.picCode)) {\r\n        this.$toast('请输入正确图形验证码')\r\n        return false\r\n      }\r\n      return true\r\n    },\r\n    // 登录校验\r\n    async login () {\r\n      if (!this.vaildFn()) {\r\n        return\r\n      }\r\n      if (!/^\\d{6}$/.test(this.msgCode)) {\r\n        return\r\n      }\r\n      const res = await codeLogin(this.mobile, this.msgCode)\r\n      this.$store.commit('user/setuserInfo', res.data)\r\n      // 看地址栏有无回跳地址\r\n      // 如果有则说明为其他网页回跳，拦截到登录，需要回跳\r\n      const backurl = this.$route.query.backUrl || '/'\r\n      this.$router.replace(backurl)\r\n      this.$toast('登录成功')\r\n\r\n      // const res = await codeLogin(this.mobile, this.msgCode)\r\n      // console.log(res)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.container {\r\n  padding: 49px 29px;\r\n\r\n  .title {\r\n    margin-bottom: 20px;\r\n    h3 {\r\n      font-size: 26px;\r\n      font-weight: normal;\r\n    }\r\n    p {\r\n      line-height: 40px;\r\n      font-size: 14px;\r\n      color: #b8b8b8;\r\n    }\r\n  }\r\n\r\n  .form-item {\r\n    border-bottom: 1px solid #f3f1f2;\r\n    padding: 8px;\r\n    margin-bottom: 14px;\r\n    display: flex;\r\n    align-items: center;\r\n    .inp {\r\n      display: block;\r\n      border: none;\r\n      outline: none;\r\n      height: 32px;\r\n      font-size: 14px;\r\n      flex: 1;\r\n    }\r\n    img {\r\n      width: 94px;\r\n      height: 31px;\r\n    }\r\n    button {\r\n      height: 31px;\r\n      border: none;\r\n      font-size: 13px;\r\n      color: #cea26a;\r\n      background-color: transparent;\r\n      padding-right: 9px;\r\n    }\r\n  }\r\n\r\n  .login-btn {\r\n    width: 100%;\r\n    height: 42px;\r\n    margin-top: 39px;\r\n    background: linear-gradient(90deg,#ecb53c,#ff9211);\r\n    color: #fff;\r\n    border-radius: 39px;\r\n    box-shadow: 0 10px 20px 0 rgba(0,0,0,.1);\r\n    letter-spacing: 2px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AA8BA;AACA,SAAAA,UAAA,EAAAC,UAAA,EAAAC,SAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MAAA;MACAC,MAAA;MAAA;MACAC,WAAA;MAAA;MACAC,MAAA;MAAA;MACAC,MAAA;MAAA;MACAC,MAAA;MAAA;MACAC,OAAA;MAAA;MACAC,OAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,KAAAb,UAAA;EACA;EACA;EACAc,UAAA;IACAC,aAAA,MAAAN,MAAA;EACA;EACAO,OAAA;IACA;IACA,MAAAhB,WAAA;MACA;QAAAI,IAAA;UAAAa,MAAA;UAAAC;QAAA;MAAA,UAAAlB,UAAA;MACA,KAAAM,MAAA,GAAAW,MAAA;MACA,KAAAZ,MAAA,GAAAa,GAAA;MACA;IACA;IACA;IACAC,eAAA;MACA,KAAAnB,UAAA;IACA;IAEA;IACA,MAAAoB,QAAA;MACA;MACA,UAAAC,OAAA;QACA;MACA;MACA;MACA,UAAAZ,MAAA,SAAAD,MAAA,UAAAD,WAAA;QACA;QACA,MAAAN,UAAA,MAAAU,OAAA,OAAAN,MAAA,OAAAK,MAAA;QACA,KAAAY,MAAA;QACA,KAAAb,MAAA,GAAAc,WAAA;UACA;UACA,KAAAf,MAAA;UACA,SAAAA,MAAA;YACA;YACAO,aAAA,MAAAN,MAAA;YACA,KAAAD,MAAA,QAAAD,WAAA;UACA;QACA;MACA;IACA;IAEA;IACAc,QAAA;MACA,qBAAAG,IAAA,MAAAd,MAAA;QACA,KAAAY,MAAA;QACA;MACA;MACA,eAAAE,IAAA,MAAAb,OAAA;QACA,KAAAW,MAAA;QACA;MACA;MACA;IACA;IACA;IACA,MAAAG,MAAA;MACA,UAAAJ,OAAA;QACA;MACA;MACA,eAAAG,IAAA,MAAAZ,OAAA;QACA;MACA;MACA,MAAAc,GAAA,SAAAxB,SAAA,MAAAQ,MAAA,OAAAE,OAAA;MACA,KAAAe,MAAA,CAAAC,MAAA,qBAAAF,GAAA,CAAAtB,IAAA;MACA;MACA;MACA,MAAAyB,OAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAC,OAAA;MACA,KAAAC,OAAA,CAAAC,OAAA,CAAAL,OAAA;MACA,KAAAP,MAAA;;MAEA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}